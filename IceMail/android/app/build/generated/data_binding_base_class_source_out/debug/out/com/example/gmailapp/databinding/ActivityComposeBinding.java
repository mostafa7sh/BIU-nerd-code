// Generated by view binder compiler. Do not edit!
package com.example.gmailapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gmailapp.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityComposeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton buttonSend;

  @NonNull
  public final TextInputEditText editTextBody;

  @NonNull
  public final TextInputEditText editTextSubject;

  @NonNull
  public final TextInputEditText editTextTo;

  @NonNull
  public final TextInputLayout layoutBody;

  @NonNull
  public final TextInputLayout layoutSubject;

  @NonNull
  public final TextInputLayout layoutTo;

  @NonNull
  public final MaterialToolbar toolbarCompose;

  private ActivityComposeBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton buttonSend, @NonNull TextInputEditText editTextBody,
      @NonNull TextInputEditText editTextSubject, @NonNull TextInputEditText editTextTo,
      @NonNull TextInputLayout layoutBody, @NonNull TextInputLayout layoutSubject,
      @NonNull TextInputLayout layoutTo, @NonNull MaterialToolbar toolbarCompose) {
    this.rootView = rootView;
    this.buttonSend = buttonSend;
    this.editTextBody = editTextBody;
    this.editTextSubject = editTextSubject;
    this.editTextTo = editTextTo;
    this.layoutBody = layoutBody;
    this.layoutSubject = layoutSubject;
    this.layoutTo = layoutTo;
    this.toolbarCompose = toolbarCompose;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityComposeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityComposeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_compose, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityComposeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonSend;
      MaterialButton buttonSend = ViewBindings.findChildViewById(rootView, id);
      if (buttonSend == null) {
        break missingId;
      }

      id = R.id.editTextBody;
      TextInputEditText editTextBody = ViewBindings.findChildViewById(rootView, id);
      if (editTextBody == null) {
        break missingId;
      }

      id = R.id.editTextSubject;
      TextInputEditText editTextSubject = ViewBindings.findChildViewById(rootView, id);
      if (editTextSubject == null) {
        break missingId;
      }

      id = R.id.editTextTo;
      TextInputEditText editTextTo = ViewBindings.findChildViewById(rootView, id);
      if (editTextTo == null) {
        break missingId;
      }

      id = R.id.layoutBody;
      TextInputLayout layoutBody = ViewBindings.findChildViewById(rootView, id);
      if (layoutBody == null) {
        break missingId;
      }

      id = R.id.layoutSubject;
      TextInputLayout layoutSubject = ViewBindings.findChildViewById(rootView, id);
      if (layoutSubject == null) {
        break missingId;
      }

      id = R.id.layoutTo;
      TextInputLayout layoutTo = ViewBindings.findChildViewById(rootView, id);
      if (layoutTo == null) {
        break missingId;
      }

      id = R.id.toolbarCompose;
      MaterialToolbar toolbarCompose = ViewBindings.findChildViewById(rootView, id);
      if (toolbarCompose == null) {
        break missingId;
      }

      return new ActivityComposeBinding((ConstraintLayout) rootView, buttonSend, editTextBody,
          editTextSubject, editTextTo, layoutBody, layoutSubject, layoutTo, toolbarCompose);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
